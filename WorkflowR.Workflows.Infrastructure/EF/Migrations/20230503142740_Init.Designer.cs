// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkflowR.Workflows.Infrastructure.EF.Contexts;

#nullable disable

namespace WorkflowR.Workflows.Infrastructure.EF.Migrations
{
    [DbContext(typeof(WorkflowsReadDbContext))]
    [Migration("20230503142740_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("workflows")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkflowR.Workflows.Infrastructure.EF.ReadModels.TaskReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("InformManagerAboutProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("InformUserWhenPreviousTaskIsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ShouldBeCompletedBefore")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaskStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("task", "workflows");
                });

            modelBuilder.Entity("WorkflowR.Workflows.Infrastructure.EF.ReadModels.TaskStatusReadModel", b =>
                {
                    b.Property<DateTime>("SetOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("taskstatus", "workflows");
                });

            modelBuilder.Entity("WorkflowR.Workflows.Infrastructure.EF.ReadModels.TaskReadModel", b =>
                {
                    b.HasOne("WorkflowR.Workflows.Infrastructure.EF.ReadModels.TaskReadModel", "TaskStatus")
                        .WithMany()
                        .HasForeignKey("TaskStatusId");

                    b.Navigation("TaskStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
